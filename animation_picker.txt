var tpl_animation_picker = [
'<div class="c-conf-panel" style="display: block;">',
    '<div class="c-conf-row c-conf-row-2">',
        '<a href="javascript:void(0);" class="link-chooseAnime">',
            '<div class="u-image-wrap">',
                '<div class="u-image-large undefined"></div>',
            '</div>',
        '</a>',
        '<div class="c-input-box c-conf-col-22 f-pb-4">',
            '<div class="f-mt-4">',
                '<label class="u-label f-float-l f-mt-4"></label>',
                '<a href="javascript:void(0);" class="u-btn u-btn-large"></a>',
            '</div>',
            '<div class="f-mt-8">',
                '<label class="u-label f-float-l"></label>',
                '<a href="javascript:void(0);" class="icon-toggle f-mr-7 toggleAnime"></a>',
                '<a href="javascript:void(0);" class="icon-play f-mr-7"></a>',
                '<a href="javascript:void(0);" class="icon-x24 icon-x24-remove"></a>',
            '</div>',
        '</div>',
    '</div>',
'</div>'
].join('');

mainModule.directive('animationPicker', function ($compile) {
    return {
        restrict: 'A',
        replace: true,
        template: tpl_animation_picker,
        require: "ngModel",
        link: function (scope, element, attrs, ngModelController) {
            var options = eval(attrs.options);
            var $fmt4 = element.find(".c-input-box>.f-mt-4");
            var $fmt8 = element.find(".c-input-box>.f-mt-8");
            var $confPanel = element.find(".c-conf-panel");
            var $label4 = element.find(".c-input-box>.f-mt-4>.u-label");
            var $label8 = element.find(".c-input-box>.f-mt-8>.u-label")
            var $btn = element.find(".c-input-box>.f-mt-4>.u-btn");
            var $toggleAnime = element.find(".c-input-box>.f-mt-8>.icon-toggle");
            var $paly = element.find(".c-input-box>.f-mt-8>.icon-play");
            var $remove = element.find(".c-input-box>.f-mt-8>.icon-x24-remove");
            var $dialog = $compile(options.dialog)(scope);
            var $row = element.find(".c-conf-row-2");
            var $icon = $row.find(".link-chooseAnime>.u-image-wrap>.u-image-large");

            ngModelController.$render = function() { 
                var viewValue = ngModelController.$viewValue;
                if(viewValue){
                    $fmt4.hide();
                    $dialog.hide();
                    $fmt8.show();
                    $confPanel.show();
                    $icon.removeClass();
                    $icon.addClass("u-image-large");
                    $icon.addClass("anime-" + viewValue.type);
                    $label8.text(constants.animationType[viewValue.type]);
                    element.find(".c-conf-panel").remove();
                    var animations = $.map(constants.animations, function (n) {
                        if (n.type == viewValue.type) return n;
                    });
                    updateModel(viewValue);
                    initConfAnim(animations);
                }else{
                    $label4.text(options.noneInfo);
                    $btn.text(options.btnInfo);
                    $fmt4.show();
                    $fmt8.hide();
                    $dialog.hide();
                    element.find(".c-conf-panel").remove();
                    $icon.removeClass();
                    $icon.addClass("u-image-large");
                    $icon.addClass("undefined");
                }
            }

            function updateModel(animation) {
                for (var key in animation) {
                    if(key != 'type')
                        ngModelController.$viewValue[key] = animation[key];
                }
            }

            scope.$watch(options.watch, function (newValue, oldValue) { 
                if(newValue != oldValue){
                    var animations = $.map(constants.animations, function (n) {
                        if (n.type == newValue) return n;
                    });
                    updateModel(animations[0]);
                    ngModelController.$render();
                }
            });

            function initConfAnim(animations) {
                scope.options = { 
                    id: "effect",
                    name: "name",
                    tpl:  options.type, 
                    class: "u-chooseList-small",
                    list: animations
                };

                var ctx = $compile(options.type1)(scope);
                $fmt4.hide();
                $fmt8.show();
                element.append(ctx);

                ctx.find("a.u-image-wrap").on("mouseenter", function (e) {
                    var end = "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend";
                    var effect = $(this).data("id");
                    $(this).find("div").css("animation", effect + " 0.8s backwards").one(end, function () {
                        $(this).css("animation", "none");
                    });
                }).on("click", function (e) { console.log(e);
                    var id = scope.currentComponent.id;
                    var effect = $(this).data("id");
                    var end = "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend";
                    $(".g-editor div[data-id='" + id + "']").find("div:first div:first").css("animation", effect + " 1s").one(end, function () {
                        $(this).css("animation", "none");
                    });
                });
            }

            $row.append($dialog);

            $icon.on('click', function (e) {
                $dialog.toggle();
            });
            
            $btn.on('click', function (e) {
                $dialog.toggle();
            });

            $toggleAnime.on('click', function (e) {
                $dialog.toggle();
            });

            $paly.on('click', function (e) {
                $dialog.toggle();
            });

            $remove.on('click', function (e) {
                ngModelController.$setViewValue(null);
                ngModelController.$render();
            });
        }
    };
});
